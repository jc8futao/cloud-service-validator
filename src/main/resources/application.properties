# Banner file encoding
spring.banner.charset=UTF-8
# Banner text resource location.
spring.banner.location=classpath:banner.txt

spring.application.name=Cloud Service Validator

global.location=Azure

# Bean
k8s.service=Kubernetes
k8s.location=${global.location}
k8s.scalability=true
k8s.accessibility=true
k8s.azure.api_url=http://42.159.89.106:8888/api/v1/ping/k8s

# MongoDB Aliyun
mongodb.service=MongoDB
mongodb.location=${global.location}
mongodb.scalability=true
mongodb.accessibility=true
mongodb.hostports=
mongodb.max_connect=50
mongodb.max_wait_thread=50
mongodb.max_time_out=60
mongodb.max_wait_time=60
mongodb.collection=daivb

#MongoDB Azure
cosmosdb.service=MongoDB
cosmosdb.scalability=true
cosmosdb.accessibility=true
cosmosdb.location=${global.location}
cosmosdb.connect_url=

# Redis Azure
redis.connect_url=
redis.service=Redis
redis.location=${global.location}
redis.scalability=true
redis.accessibility=true

#By default we are assuming you will use the Azure Storage Emulator. If you have an Azure Subscription, you can alternatively
#create a Storage Account and run against the storage service by commenting out the connection string below and using the
#second connection string - in which case you must also insert your storage account name and key in the line below.

#StorageConnectionString = UseDevelopmentStorage=true
StorageConnectionString=

#configuration to access postgresql on ali cloud
spring.ds.ali.post.url=PROVIDE_POSTGRESQL_URL
spring.ds.ali.post.username =PROVIDE_USER_NAME
spring.ds.ali.post.password =PROVIDE_PASSWORD
spring.ds.ali.post.driverClassName=org.postgresql.Driver

#configuration to access mysql on ali cloud
spring.ds.ali.mysql.url=PROVIDE_MYSQL_URL
spring.ds.ali.mysql.username=PROVIDE_USER_NAME
spring.ds.ali.mysql.password=PROVIDE_PASSWORD
spring.ds.ali.mysql.driverClassName=com.mysql.jdbc.Driver

#configuration to access postgresql on azure cloud
spring.ds.azure.post.url =PROVIDE_POSTGRESQL_URL
spring.ds.azure.post.username =PROVIDE_USER_NAME
spring.ds.azure.post.password =PROVIDE_PASSWORD
spring.ds.azure.post.driverClassName=org.postgresql.Driver


#configuration to access msql on azure cloud
spring.ds.azure.mysql.url=PROVIDE_MYSQL_URL
spring.ds.azure.mysql.username=PROVIDE_USER_NAME
spring.ds.azure.mysql.password=PROVIDE_PASSWORD
spring.ds.azure.mysql.driverClassName=com.mysql.jdbc.Driver

#configuration of mysql availability in ali cloud
mysql.ali.service=Mysql
mysql.ali.location=${global.location}
mysql.ali.scalability=true
mysql.ali.accessibility=true

#configuration of postgresql availability in ali cloud
post.ali.service=Postgresql
post.ali.location=${global.location}
post.ali.scalability=true
post.ali.accessibility=true


#configuration of mysql availability in azure cloud
mysql.azure.service=Mysql
mysql.azure.location=${global.location}
mysql.azure.scalability=true
mysql.azure.accessibility=true

#configuration of postgresql availability in ali cloud
post.azure.service=Postgresql
post.azure.location=${global.location}
post.azure.scalability=true
post.azure.accessibility=true

# Cloudant configurations
cloudant.ibm.account=5b92f424-d68b-4365-8a9f-8b12f145d13e-bluemix
cloudant.ibm.username=
cloudant.ibm.password=
